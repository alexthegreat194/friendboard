// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String

  profile Profile?
  ownedGroups Group[] @relation(name: "owner")
  usersInGroups UserInGroup[]
  eventsCreated Event[] 
  eventsAttending EventAttending[] 
}

model Profile {
  id Int @id @default(autoincrement())
  name String
  bio String
  birthday DateTime
  pronouns String
  
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Group {
  id Int @id @default(autoincrement())
  name String
  code String @unique

  ownerId Int
  owner User @relation(fields: [ownerId], references: [id], name: "owner")

  usersInGroups UserInGroup[]
  eventsCreated Event[]
}

model UserInGroup {
  id Int @id @default(autoincrement())
  userId Int
  groupId Int

  user User @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
}

model Event {
  id Int @id @default(autoincrement())
  name String
  description String
  date DateTime

  createrId Int
  creater User @relation(fields: [createrId], references: [id])

  groupId Int
  group Group @relation(fields: [groupId], references: [id])

  attendees EventAttending[]
}

model EventAttending {
  id Int @id @default(autoincrement())
  eventId Int
  userId Int

  event Event @relation(fields: [eventId], references: [id])
  user User @relation(fields: [userId], references: [id])
}